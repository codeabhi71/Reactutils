{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","role","aria-checked","onClick","togglemodebluish","htmlFor","modetext","togglemodegreenish","togglemode","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","newtextinuc","toUpperCase","showalert","newtextinlc","toLowerCase","newtext","split","join","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setModetext","_useState5","_useState6","setcolor","_useState7","_useState8","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d6ec021b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link> */}\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary btn-light\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === 'dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"  onClick={props.togglemodebluish}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.modetext} bluish`}</label>\r\n</div>\r\n      \r\n      <div className={`mx-4 form-check form-switch text-${props.mode === 'dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"  onClick={props.togglemodegreenish}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.modetext} greenish`}</label>\r\n</div>\r\n      <div className={`mx-4 form-check form-switch text-${props.mode === 'dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"  onClick={props.togglemode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modetext}</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title:PropTypes.string.isRequired,\r\n    home:PropTypes.string.isRequired,\r\n    about:PropTypes.string.isRequired\r\n\r\n};\r\n\r\nNavbar.defaultProps = { \r\n    title:'i m title',\r\n    home:'i m home',\r\n    about:'i m about'\r\n};\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick=()=>{\r\n      // console.log(\"uc clicked\" + text);\r\n      let newtextinuc=text.toUpperCase();\r\n      setText(newtextinuc)\r\n      props.showalert(\"Converted to UPPERCASE\",'success')\r\n  }\r\n  const handleLoClick=()=>{\r\n    // console.log(\"uc clicked\" + text);\r\n    let newtextinlc=text.toLowerCase();\r\n    setText(newtextinlc)\r\n    props.showalert(\"Converted to lowercase\",'success')\r\n  }\r\n  const handleclear=()=>{\r\n    setText(\"\")\r\n    props.showalert(\"Cleared\",'success')\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    // console.log(\"uc clicked handle\");\r\n    setText(event.target.value)\r\n  }\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showalert(\"Text copied to clipboard\",'success')\r\n  }\r\n  const handleRSClick=()=>{\r\n    var newtext=text.split(/[ ]+/);\r\n    setText(newtext.join(' '));\r\n    props.showalert(\"Extra Spaces Removed\",'success')\r\n\r\n  }\r\n  \r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n           <textarea className={'form-control'}  style={{backgroundColor: props.mode === 'dark'?'rgb(0 0 0 / 37%)':'white',color: props.mode === 'dark'?'white':'black'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n           <button className={`${props.color}`} onClick={handleUpClick}>Convert to uppercase</button>\r\n           <button className={`${props.color} mx-2`} onClick={handleLoClick}>Convert to lowercase</button>\r\n           <button className={`${props.color} mx-2`} onClick={handleRSClick}>Remove Extra Spaces</button>\r\n           <button className={`${props.color} mx-2`} onClick={handleclear}>Clear</button>\r\n           <button className={`${props.color} mx-2`} onClick={handleCopy}>Copy</button>\r\n    </div>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n      <h1>your Text summary</h1>\r\n      <p > <b>{text.split(\" \").length-1}</b>  Words, <b>{text.length}</b> Characters</p>\r\n      <p> <b>{0.008 * text.split(\" \").length}</b>  minutes to read</p>\r\n      <h2 >Preview</h2>\r\n      <p>{text.length>0?text:\"enter your text to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>  :<strong>{props.alert.msg}</strong>\r\n        </div>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Routes\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode]=useState('light')\n  const [modetext,setModetext]=useState('enable dark mode')\n  const [color,setcolor]=useState('btn btn-primary')\n  const [alert,setAlert]=useState(null)\n\n  const togglemode=()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      setModetext('disable dark mode')\n      document.body.style.backgroundColor='#0d0d0dd9'\n      showAlert(\"dark mode enabled\",'success')\n      document.title=\"TextUtils- Dark mode\"\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      setModetext('enable dark mode')\n      showAlert(\"dark mode disabled\",'success')\n      setTimeout(() => {\n        document.title=\"TextUtils-Home\"\n      }, 2000);\n      document.title=\"TextUtils- Light mode\"\n    }\n  }\n  const togglemodegreenish=()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      setcolor('btn btn-dark')\n      setModetext('disable dark mode')\n      document.body.style.backgroundColor='#4b854b'\n      showAlert(\" greenish dark mode enabled\",'success')\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      setModetext('enaable dark mode')\n      setcolor('btn btn-primary')\n      showAlert(\"greenish dark mode disabled\",'success')\n    }\n  }\n  const togglemodebluish=()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      setcolor('btn btn-primary')\n      setModetext('disable dark mode')\n      document.body.style.backgroundColor='#464897'\n      showAlert(\" greenish dark mode enabled\",'success')\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      setModetext('enable dark mode')\n      setcolor('btn btn-primary')\n      showAlert(\"greenish dark mode disabled\",'success')\n    }\n  }\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1800);\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} togglemode={togglemode} modetext={modetext} togglemodegreenish={togglemodegreenish} togglemodebluish={togglemodebluish} home=\"Home\" />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />}></Route> */}\n          {/* /* < exact path=\"/\" element={ */}\n            <Textform heading=\"Enter the text here\" color={color} showalert={showAlert} mode={mode}/>\n      {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}